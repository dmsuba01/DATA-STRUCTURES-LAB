Lab 10 – Priority Queue ADT
Date: 02/04/25

A. Utilize C++ STL if needed. Write a C++ program to solve the following,
Polycarp was presented with some sequence of integers a of length n (1 ≤ a ≤ n). A sequence can make Polycarp happy only if it consists of different numbers (i.e. distinct numbers).
In order to make his sequence like this, Polycarp is going to make some (possibly zero) number of moves.
In one move, he can:
remove the first (leftmost) element of the sequence.
For example, in one move, the sequence [3, 1, 4, 3] will produce the sequence [1, 4, 3], which consists of different numbers.
Determine the minimum number of moves he needs to make so that in the remaining sequence all elements are different. In other words, find the length of the smallest prefix of the given sequence a, after removing which all values in the sequence will be unique.

B. Utilize C++ STL if needed. Write a C++ program to solve the following,
Three guys play a game: first, each person writes down n distinct words of length 3. Then, they total up the number of points as follows:
if a word was written by one person that person gets 3 points,
if a word was written by two people each of the two gets 1 point,
if a word was written by all nobody gets any points.
In the end, how many points does each player have?

C. Write a separate C++ menu– driven program to implement Priority Queue ADT using a max heap. Maintain proper boundary conditions and follow good coding practices. The Priority Queue ADT has the following operations,
1.	Insert
2.	Delete
3.	Display
4.	Search
5.	Sort (Heap Sort)
